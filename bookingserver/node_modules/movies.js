var globals = require('globals');

var register = function(params, callback) {
	var email 			= params.email,
		name 			= params.name,
		password 		= params.password,
		retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "INSERT INTO users "+
					"VALUES (null,'"+name+"','"+email+"', '"+password+"', 1)";

	console.log("query: ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (register)" + err;
			}
			else {
				login(params, callback);
			}
		});
	});
};

var login = function(params, callback) {
	var email 			= params.email,
		password 		= params.password,
		retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "SELECT c_id AS userId, c_name AS name FROM users WHERE "+
					"c_email='"+email+"' AND c_pwd='"+password+"'";

	console.log(retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (register)" + err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var listing = function(params, callback) {
	var retrieveQuery 	= "SELECT * FROM MOVIES",
		response 		= {},
		whereIncluded 	= false;

	if("languages" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " LANGUAGES='"+params.languages+"'";
	}
	
	if("subtitles" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " SUBTITLES='"+params.subtitles+"'";
	}
	
	if("title" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " title LIKE '%"+params.title+"%'";
	}

	if("mdarating" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " MDARATING='"+params.mdarating+"'";
	}

	if("ratingorder" in params) {
		var order = params.rating == "Ascending" ? "ASC" : "DESC";
		retrieveQuery += " ORDER BY rating "+order;
	}

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (getListing)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var details = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	if("sid" in params) {
		retrieveQuery = "SELECT C.p_name AS cineplex,"+
						"M.TITLE AS title,"+
						"S.SHOWDATE AS showdate,"+
						"S.TIME AS time,"+
						"M.RUNTIME AS runtime,"+
						"M.MDARATING AS mdarating "+
						"FROM shows S, MOVIES M, cinema C "+
						"WHERE S.sid='"+params.sid+"' "+
						"AND M.MID=S.MID "+
						"AND C.p_id=S.p_id;";
	}

	if("mid" in params) {
		retrieveQuery = "SELECT M.MID AS mid,"+
						"M.TITLE AS title,"+
						"M.DIRECTOR AS director,"+
						"M.ACTOR AS cast,"+
						"M.GENRE AS genre,"+
						"M.RUNTIME AS runtime,"+
						"M.MDARATING AS mdarating,"+
						"M.LANGUAGES AS languages,"+
						"M.SUBTITLES AS subtitles,"+
						"M.SYNOPSIS AS synopsis "+
						"FROM MOVIES M "+
						"WHERE M.MID='"+params.mid+"'";
	}

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (details)\n"+err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
}

/*****************************************************************************
* Called from /movie?id=20100001
*	SELECT DISTINCT TITLE,RUNTIME,MDARATING,SHOWDATE,TIME, p_name
*	FROM MOVIES A, shows B, cinema C
*	WHERE A.MID=B.MID
*	AND A.MID='20140001'
*	AND C.p_id=B.p_id;
******************************************************************************/
var showtimes = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "SELECT S.SID, S.SHOWDATE, S.TIME, C.p_name "+
					"FROM shows S, cinema C "+
					"WHERE S.MID='"+params.id+"' "+
					"AND S.p_id=C.p_id;";

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (movie)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var seats = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = 'SELECT SEATNUM '+
					'FROM tickets A '+
					'WHERE A.sid="'+params.sid+'"';

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (seats)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var book = function(params, callback) {
	var retrieveQuery 	= "START TRANSACTION;",
		response 		= {};

	var sid 		= params.sid;
	var c_id 		= params.c_id;
	var bookingnum 	= c_id + sid;
	var seats 		= params.seats;

	for( var i=0, iLen=seats.length; i<iLen; i++ ) {
		var ticketnum = sid+seats[i];

		ticketnum = ticketnum.replace("-", "");

		var temp = "INSERT INTO tickets VALUES ('"+ticketnum+"','"+seats[i]+"','"+sid+"');";
		retrieveQuery += temp;
	}

	for( var j=0, jLen=seats.length; j<jLen; j++ ) {
		var ticketnum = sid+seats[j];

		ticketnum = ticketnum.replace("-", "");

		var temp = "INSERT INTO booking VALUES (null,'"+ticketnum+"','"+c_id+"');";
		retrieveQuery += temp;
	}

	retrieveQuery += "COMMIT;";

	console.log("QUERY : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (book)\n" + err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

module.exports = {
	register 	: register,
	login		: login,
	listing 	: listing,
	showtimes 	: showtimes,
	details 	: details,
	seats 		: seats,
	book 		: book
};