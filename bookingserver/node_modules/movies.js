var globals = require('globals');

var register = function(params, callback) {
	var email 			= params.email,
		name 			= params.name,
		password 		= params.password,
		userType 		= params.userType,
		retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "INSERT INTO users "+
					"VALUES (null,'"+name+"','"+email+"', '"+password+"', "+userType+")";

	console.log("query: ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (register)" + err;
			}
			else {
				login(params, callback);
			}
		});
	});
};

var login = function(params, callback) {
	var email 			= params.email,
		password 		= params.password,
		retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "SELECT c_id AS userId, c_name AS name, c_type AS userType FROM users WHERE "+
					"c_email='"+email+"' AND c_pwd='"+password+"'";

	console.log(retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (register)" + err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var listing = function(params, callback) {
	var retrieveQuery 	= "SELECT * FROM MOVIES",
		response 		= {},
		whereIncluded 	= false;

	if("languages" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " LANGUAGES='"+params.languages+"'";
	}
	
	if("subtitles" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " SUBTITLES='"+params.subtitles+"'";
	}
	
	if("title" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " title LIKE '%"+params.title+"%'";
	}

	if("mdarating" in params) {
		if(!whereIncluded) {
			retrieveQuery += " WHERE";
			whereIncluded = true;
		}
		else {
			retrieveQuery += " AND";
		}
		retrieveQuery += " MDARATING='"+params.mdarating+"'";
	}

	if("ratingorder" in params) {
		var order = params.rating == "Ascending" ? "ASC" : "DESC";
		retrieveQuery += " ORDER BY rating "+order;
	}

	console.log("1 FILTER : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (getListing)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var details = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	if("sid" in params) {
		retrieveQuery = "SELECT M.MID AS MID, C.p_name AS cineplex,"+
						"M.TITLE AS title,"+
						"S.SHOWDATE AS showdate,"+
						"S.TIME AS time,"+
						"M.RUNTIME AS runtime,"+
						"M.MDARATING AS mdarating "+
						"FROM shows S, MOVIES M, cinema C "+
						"WHERE S.sid='"+params.sid+"' "+
						"AND M.MID=S.MID "+
						"AND C.p_id=S.p_id;";
	}

	if("mid" in params) {
		retrieveQuery = "SELECT M.MID AS mid,"+
						"M.TITLE AS title,"+
						"M.DIRECTOR AS director,"+
						"M.ACTOR AS cast,"+
						"M.GENRE AS genre,"+
						"M.RUNTIME AS runtime,"+
						"M.MDARATING AS mdarating,"+
						"M.RATING AS rating,"+
						"M.LANGUAGES AS languages,"+
						"M.SUBTITLES AS subtitles,"+
						"M.SYNOPSIS AS synopsis "+
						"FROM MOVIES M "+
						"WHERE M.MID='"+params.mid+"'";
	}

	console.log("2 DETAILS : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (details)\n"+err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
}

/*****************************************************************************
* Called from /movie?id=20100001
*	SELECT DISTINCT TITLE,RUNTIME,MDARATING,SHOWDATE,TIME, p_name
*	FROM MOVIES A, shows B, cinema C
*	WHERE A.MID=B.MID
*	AND A.MID='20140001'
*	AND C.p_id=B.p_id;
******************************************************************************/
var showtimes = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = "SELECT S.SID, S.SHOWDATE, S.TIME, C.p_name "+
					"FROM shows S, cinema C "+
					"WHERE S.MID='"+params.id+"' "+
					"AND S.p_id=C.p_id;";

	console.log("3 SHOWTIMES : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (movie)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var seats = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = 'SELECT SEATNUM '+
					'FROM tickets A '+
					'WHERE A.sid="'+params.sid+'"';

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (seats)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var book = function(params, callback) {
	var retrieveQuery 	= "START TRANSACTION;",
		response 		= {};

	var sid 		= params.sid;
	var c_id 		= params.c_id;
	var bookingnum 	= c_id + sid;
	var seats 		= params.seats;

	for( var i=0, iLen=seats.length; i<iLen; i++ ) {
		var ticketnum = sid+seats[i];

		ticketnum = ticketnum.replace("-", "");

		var temp = "INSERT INTO tickets VALUES ('"+ticketnum+"','"+seats[i]+"','"+sid+"');";
		retrieveQuery += temp;
	}

	for( var j=0, jLen=seats.length; j<jLen; j++ ) {
		var ticketnum = sid+seats[j];

		ticketnum = ticketnum.replace("-", "");

		var temp = "INSERT INTO booking VALUES (null,'"+ticketnum+"','"+c_id+"');";
		retrieveQuery += temp;
	}

	retrieveQuery += "COMMIT;";

	console.log("4 : booking : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (book)\n" + err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var getBookings = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = 'SELECT '+
					'B.ticketNUM AS ticketnum,'+
					'T.SEATNUM AS seatnum,'+
					'S.SHOWDATE AS showdate,'+
					'S.TIME AS showtime,'+
					'M.TITLE AS title,'+
					'M.RUNTIME AS runtime,'+
					'M.MDARATING AS mdarating,'+
					'C.p_name AS cinema '+
					'FROM booking B,tickets T,shows S,MOVIES M,cinema C '+
					'WHERE B.c_id ='+params.userId+' '+
					'AND B.ticketNUM=T.TICKETNUM '+
					'AND T.sid=S.SID '+
					'AND S.MID=M.MID '+
					'AND S.p_id=C.p_id';

	console.log("5 getbooking : ", retrieveQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (getBookings)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var addmovie = function(params, callback) {
	var retrieveQuery = "SELECT MID FROM MOVIES ORDER BY MID DESC";
		addQuery 	= "",
		response 	= {};

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (get largest MID)";
				callback(response);
			}
			else {
				addQuery = 	'INSERT INTO MOVIES VALUES ('+
							'"'+(Number(rows[0].MID)+1)+'",'+
							'"'+params.title+'",'+
							params.rating+','+
							'"'+params.director+'",'+
							'"'+params.cast+'",'+
							'"'+params.genre+'",'+
							params.runtime+','+
							'"'+params.mdarating+'",'+
							'"'+params.languages+'",'+
							'"'+params.subtitles+'",'+
							'"'+params.synopsis+'")';

				globals.pool.getConnection(function(err, connection) {
					connection.query(addQuery, function(err, rows) {
						connection.release();
						if(err) {
							response.result = "failure";
							response.error 	= "Error in querying. (addmovie)";
						}
						else {
							response.result = "success";
							response.data 	= rows;
						}
						callback(response);
					});
				});

			}
			callback(response);
		});
	});
};

var adminpanelInfo = function(params, callback) {
	var bookingsQuery 	= "",
		usersQuery 		= "",
		response 		= { data : {} };

	usersQuery 		= 	"SELECT * FROM users";

	bookingsQuery 	= 	'SELECT '+
						'B.c_id AS userid,'+
						'B.ticketNUM AS ticketnum,'+
						'T.SEATNUM AS seatnum,'+
						'S.SHOWDATE AS showdate,'+
						'S.TIME AS showtime,'+
						'M.TITLE AS title,'+
						'M.RUNTIME AS runtime,'+
						'M.MDARATING AS mdarating,'+
						'C.p_name AS cinema '+
						'FROM booking B,tickets T,shows S,MOVIES M,cinema C '+
						'WHERE B.ticketNUM=T.TICKETNUM '+
						'AND T.sid=S.SID '+
						'AND S.MID=M.MID '+
						'AND S.p_id=C.p_id';

	moviesQuery 	= 	'SELECT * FROM MOVIES';

	console.log("9 admin : ", bookingsQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(bookingsQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (users)";
				callback(response);
			}
			else {
				response.result 		= "success";
				response.data.bookings 	= rows;

				globals.pool.getConnection(function(err, connection) {
					connection.query(usersQuery, function(err, rows) {
						connection.release();
						if(err) {
							response.result = "failure";
							response.error 	= "Error in querying. (bookings)";
							callback(response);
						}
						else {
							response.data.users = rows;		
						}

						globals.pool.getConnection(function(err, connection) {
							connection.query(moviesQuery, function(err, rows) {
								connection.release();
								if(err) {
									response.result = "failure";
									response.error 	= "Error in querying. (movies)";
									callback(response);
								}
								else {
									response.data.movies = rows;

									// globals.pool.getConnection(function(err, connection) {
									// 	connection.query(showtimesQuery, function(err, rows) {
									// 		connection.release();
									// 		if(err) {
									// 			response.result = "failure";
									// 			response.error 	= "Error in querying. (showtimes)";
									// 		}
									// 		else {
									// 			response.data.showtimes = rows;		
									// 		}
									// 		callback(response);
									// 	});
									// });	
								}
								callback(response);
							});
						});
					});
				});
			}
		});
	});
};

var userInfo = function(params, callback) {
	var retrieveQuery 	= "",
		response 		= {};

	retrieveQuery = 'SELECT * FROM users WHERE c_id='+params.userId;

	globals.pool.getConnection(function(err, connection) {
		connection.query(retrieveQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (userInfo)" + err;
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var editUser = function(params, callback) {
	var editQuery 	= "",
		response 	= {};

	editQuery = 'UPDATE users SET '+
				'c_name="'+params.name+'",'+
				'c_email="'+params.email+'",'+
				'c_pwd="'+params.password+'",'+
				'c_type='+params.userType+
				' WHERE c_id='+params.userId;

	console.log("editUserQuery : ", editQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(editQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (editUser)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var editMovie = function(params, callback) {
	var editQuery 	= "",
		response 	= {};

	editQuery = 'UPDATE MOVIES SET '+
				'TITLE="'+params.title+'",'+
				'RATING='+Number(params.rating)+','+
				'DIRECTOR="'+params.director+'",'+
				'ACTOR="'+params.cast+'",'+
				'GENRE="'+params.genre+'",'+
				'RUNTIME='+params.runtime+','+
				'MDARATING="'+params.mdarating+'",'+
				'LANGUAGES="'+params.languages+'",'+
				'SUBTITLES="'+params.subtitles+'",'+
				'SYNOPSIS="'+params.synopsis+'"'+
				' WHERE MID='+params.mid;

	console.log("editMovieQuery : ", editQuery);

	globals.pool.getConnection(function(err, connection) {
		connection.query(editQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (editMovie)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var removeuser = function(params, callback) {
	var removeQuery 	= "",
		response 		= {};

	removeQuery = 'DELETE FROM users WHERE c_id='+params.userId;

	globals.pool.getConnection(function(err, connection) {
		connection.query(removeQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (removeuser)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var removemovie = function(params, callback) {
	var removeQuery 	= "",
		response 		= {};

	removeQuery = 'DELETE FROM MOVIES WHERE mid="'+params.mid+'"';

	globals.pool.getConnection(function(err, connection) {
		connection.query(removeQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (removemovie)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

var removebooking = function(params, callback) {
	var removeQuery 	= "",
		response 		= {};

	removeQuery = "DELETE FROM tickets WHERE TICKETNUM='"+params.ticketnum+"'";

	globals.pool.getConnection(function(err, connection) {
		connection.query(removeQuery, function(err, rows) {
			connection.release();
			if(err) {
				response.result = "failure";
				response.error 	= "Error in querying. (removebooking)";
			}
			else {
				response.result = "success";
				response.data 	= rows;
			}
			callback(response);
		});
	});
};

module.exports = {
	register 		: register,
	login			: login,
	listing 		: listing,
	showtimes 		: showtimes,
	details 		: details,
	seats 			: seats,
	book 			: book,
	getBookings 	: getBookings,
	addmovie		: addmovie,
	adminpanelInfo 	: adminpanelInfo,
	userInfo 		: userInfo,
	editUser 		: editUser,
	editMovie 		: editMovie,
	removeuser 		: removeuser,
	removemovie 	: removemovie,
	removebooking 	: removebooking
};